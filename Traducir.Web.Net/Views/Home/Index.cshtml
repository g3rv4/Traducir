@using Traducir.Api.ViewModels.Strings
@model Traducir.Web.Net.ViewModels.Home.IndexViewModel

@section Scripts
{
    <script>
        var stringQueryFilters = {
            key: @Json.Serialize(Model.StringsQuery.Key),
            sourceRegex: @Json.Serialize(Model.StringsQuery.SourceRegex),
            translationRegex: @Json.Serialize(Model.StringsQuery.TranslationRegex),
            suggestionsStatus: @((int)Model.StringsQuery.SuggestionsStatus),
            translationStatus: @((int)Model.StringsQuery.TranslationStatus),
            urgencyStatus: @((int)Model.StringsQuery.UrgencyStatus),
            ignoredStatus: @((int)Model.StringsQuery.IgnoredStatus),
            pushStatus:  @((int)Model.StringsQuery.PushStatus)
        };
    </script>

    <script src="~/js/strings.js"></script>
}

<div class="container">
    <div class="m-2 text-center">
        <h2>Filters</h2>
    </div>
    <div class="row">
        <div class="col">
            <div class="form-group">
                <label for="sourceRegex">Source Regex</label>
                <input type="text" class="js-string-query-filter form-control" data-string-query-key="sourceRegex" id="sourceRegex" placeholder="^question" value="@Model.StringsQuery.SourceRegex">
            </div>
        </div>
        <div class="col">
            <div class="form-group">
                <label for="translationRegex">Translation Regex</label>
                <input type="text" class="js-string-query-filter form-control" data-string-query-key="translationRegex" id="translationRegex" placeholder="(?i)pregunta$" value="@Model.StringsQuery.TranslationRegex">
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <div class="form-group">
                <label for="withoutTranslation">Strings without translation</label>
                @Html.DropDownListFor(
                    model => model.StringsQuery.TranslationStatus,
                    Html.GetEnumSelectList(typeof(TranslationStatus)),
                    null,
                    new { @class="js-string-query-filter form-control", id="withoutTranslation", data_string_query_key="translationStatus" })
            </div>
        </div>
        <div class="col">
            <div class="form-group">
                <label for="suggestionsStatus">Strings with pending suggestions</label>
                @Html.DropDownListFor(
                    model => model.StringsQuery.SuggestionsStatus,
                    Html.GetEnumSelectList(typeof(SuggestionApprovalStatus)),
                    null,
                    new { @class="js-string-query-filter form-control", id="suggestionsStatus", data_string_query_key="suggestionsStatus" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <div class="form-group">
                <label for="key">Key</label>
                <input type="text" class="js-string-query-filter form-control" data-string-query-key="key" id="key" value="@Model.StringsQuery.Key">
            </div>
        </div>
        <div class="col">
            <div class="form-group">
                <label for="suggestionsStatus">Strings with urgency status</label>
                @Html.DropDownListFor(
                    model => model.StringsQuery.UrgencyStatus,
                    Html.GetEnumSelectList(typeof(UrgencyStatus)),
                    null,
                    new { @class="js-string-query-filter form-control", id="urgencyStatus", data_string_query_key="urgencyStatus" })
            </div>
        </div>
    </div>
    @if(Model.UserCanSeeIgnoredAndPushStatus)
    {
        <div class="row">
            <div class="col">
                <div class="form-group">
                    <label for="ignoredStatus">Ignored strings</label>
                    @Html.DropDownListFor(
                        model => model.StringsQuery.IgnoredStatus,
                        Html.GetEnumSelectList(typeof(IgnoredStatus)),
                        null,
                        new { @class="js-string-query-filter form-control", id="ignoredStatus", data_string_query_key="ignoredStatus" })
                </div>
            </div>
            <div class="col">
                <div class="form-group">
                    <label for="suggestionsStatus">Strings that need push</label>
                    @Html.DropDownListFor(
                        model => model.StringsQuery.PushStatus,
                        Html.GetEnumSelectList(typeof(PushStatus)),
                        null,
                        new { @class="js-string-query-filter form-control", id="pushStatus", data_string_query_key="pushStatus" })
                </div>
            </div>
        </div>
    }
    <div class="row text-center mb-5">
        <div class="col">
            <a class="btn btn-secondary" href="/">Reset</a>
        </div>
    </div>

    <div id="strings_list">
        @if (Model.FilterResults == null)
        {
            <div class="row text-center">
                <div class="col d-none d-lg-block">
                    <div class="btn-group" role="group" aria-label="Basic example">
                        <button type="button" class="btn btn-outline-secondary" disabled="">@Model.StringCounts.TotalStrings total strings</button>
                        @if (Model.StringCounts.UrgentStrings > 0)
                        {
                            <a class="btn btn-danger" href="/filters?urgencyStatus=1">@Model.StringCounts.UrgentStrings marked as urgent</a>
                        }
                        <a class="js-string-query-filter btn btn-outline-danger" data-string-query-key="translationStatus" data-string-query-value="2" href="#">@Model.StringCounts.WithoutTranslation without translation</a>
                        <a class="js-string-query-filter btn btn-outline-primary" data-string-query-key="suggestionsStatus" data-string-query-value="3" href="#">@Model.StringCounts.WaitingApproval suggestions awaiting approval</a>
                        <a class="js-string-query-filter btn btn-outline-success" data-string-query-key="suggestionsStatus" data-string-query-value="4" href="#">@Model.StringCounts.WaitingReview approved suggestions awaiting review</a>
                    </div>
                </div>
            </div>
        }
        else
        {
            <partial name="FilterResults" model="Model.FilterResults"/>
        }
    </div>
</div>
